function n(t){setTimeout(()=>{requestAnimationFrame(t)},0)}function a(t){const o=e=>{e.dataset.src&&!e.src&&(e.src=e.dataset.src),e.dataset.srcset&&!e.srcset&&(e.srcset=e.dataset.srcset)};t.parentNode.tagName==="PICTURE"?Array.from(t.parentNode.children).forEach(e=>{o(e)}):o(t)}function r(t){return t.forEach(o=>a(o))}function c(){if(!("loading"in HTMLImageElement.prototype)&&"IntersectionObserver"in window){console.log("intersection observer");const t=new IntersectionObserver((o,e)=>{o.forEach(s=>{if(s.isIntersecting){const d=s.target;a(d),e.unobserve(d)}})},{rootMargin:"0px 0px 500px 0px"});document.querySelectorAll('[loading="lazy"]').forEach(o=>{t.observe(o)})}else{const t=[],o=[];document.querySelectorAll('[loading="lazy"], [data-src]').forEach(e=>{if(e.hasAttribute("data-load-dom"))t.push(e);else if(e.hasAttribute("data-load-load"))o.push(e);else{if(e.hasAttribute("data-load-manual"))return;a(e)}}),i(t),u(o)}}function i(t){console.debug("loadImagesOnDOMLoaded",t);const o=()=>n(()=>r(t));if(document.readyState!="loading")return o();document.addEventListener("DOMContentLoaded",o)}function u(t){console.debug("loadImagesOnLoaded",t);const o=()=>n(()=>r(t));if(document.readyState=="complete")return o();window.addEventListener("load",o)}n(c);document.addEventListener("DOMContentLoaded",c);window.theme={};document.dispatchEvent(new CustomEvent("theme:loaded"));
//# sourceMappingURL=main.bundle.js.map

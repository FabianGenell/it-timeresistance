{% doc %}
  Renders active filter tags with remove functionality

  @param {object} results - Collection or search results object containing filters (required)
  @param {boolean} [show_swatch_filters] - Whether to show color swatches for swatch filters

  @example
  Basic active filters
  {% render 'active-filters', results: collection %}
  @example
  With swatch display
  {% render 'active-filters', results: search, show_swatch_filters: true %}
{% enddoc %}

{%- liquid
  assign file_extension = 'png'
  assign swatch_options = settings.swatch_options | downcase | split: ', '
  assign sort_by = results.sort_by | default: results.default_sort_by
  
  if results.url
    assign results_url = results.url
  else
    assign terms = results.terms | escape
    assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
  endif

  # Parse custom swatch colors
  assign custom_colors = settings.custom_swatch_colors | newline_to_br | split: '<br />'
  assign custom_color_keys = ''
  assign custom_color_values = ''
  
  for color_value in custom_colors
    assign color_parts = color_value | split: ':'
    if color_parts.size == 2
      assign color_key = color_parts[0] | strip
      assign color_val = color_parts[1] | strip
      assign custom_color_keys = custom_color_keys | append: color_key | append: ','
      assign custom_color_values = custom_color_values | append: color_val | append: ','
    endif
  endfor
  
  assign custom_color_keys = custom_color_keys | remove_last: ',' | split: ','
  assign custom_color_values = custom_color_values | remove_last: ',' | split: ','
-%}

<div class="active-filters" data-active-filters>
  {%- for filter in results.filters -%}
    {%- liquid
      assign group_name = filter.label | handleize
    -%}

    {%- for value in filter.active_values -%}
      {%- liquid
        # Check if we should show swatch
        assign show_swatch = false
        if swatch_options contains group_name and show_swatch_filters == true
          assign show_swatch = true
        endif
        
        # Initialize swatch style
        assign swatch_style = blank
        
        if show_swatch
          # Use the same logic as filter-item.liquid for swatch images
          if value.display
            if value.display.type == 'colors'
              # Handle multi-color swatches
              assign angle = 0
              assign angle_increment = 360 | divided_by: value.display.value.size
              
              capture conic_gradient
                for color in value.display.value
                  echo color | append: ' ' | append: angle | append: 'deg'
                  assign angle = angle | plus: angle_increment
                  echo ' ' | append: angle | append: 'deg'
                  unless forloop.last
                    echo ', '
                  endunless
                endfor
              endcapture
              
              assign swatch_style = 'background: conic-gradient(' | append: conic_gradient | append: ');'
            else
              # Handle image swatches
              assign image_url = value.display.value | image_url: width: 24
              assign swatch_style = 'background-image: url(' | append: image_url | append: ');'
            endif
          else
            # Use custom color or fallback logic
            assign swatch_color = blank
            
            # Check custom colors first
            if custom_color_keys contains value.label
              for color_key in custom_color_keys
                if color_key == value.label
                  assign swatch_color = custom_color_values[forloop.index0]
                  break
                endif
              endfor
            endif
            
            # Fallback to color name
            if swatch_color == blank
              assign swatch_color = value.label | downcase | replace: ' ', ''
            endif
            
            assign swatch_style = 'background-color: ' | append: swatch_color | append: ';'
            
            # Check for custom swatch image using the correct naming convention
            assign handle = value.label | handleize
            assign parts = handle | split: '-'
            capture image_name
              for part in parts
                echo part | capitalize | append: '_'
              endfor
              echo 'swatch-color-product-page.jpg'
            endcapture
            
            assign custom_swatch_image = image_name
            
            # Fallback to simple .png if no jpg found
            if images[custom_swatch_image] == blank
              assign custom_swatch_image = value.label | handle | append: '.png'
            endif
            
            if images[custom_swatch_image] != blank
              assign image_url = custom_swatch_image | file_url
              assign swatch_style = swatch_style | append: ' background-image: url(' | append: image_url | append: ');'
            endif
          endif
        endif
      -%}
      
      <a
        href="{{ value.url_to_remove }}"
        class="active-filters__active-filter fs-body-75 no-transition"
        data-remove-filter
        data-filter="filter-{{ value.label | handleize | escape }}"
        data-name="{{ value.param_name }}"
        data-value="{{ value.value }}"
        data-value-escaped="{{ value.value | url_escape }}"
      >
        {%- if show_swatch -%}
          <span
            class="active-filters__swatch"
            data-shape="{{ settings.swatch_shape }}"
            style="{{ swatch_style }}"
          >
          </span>
        {%- endif -%}

        {%- if filter.type == 'boolean' -%}
          {{ filter.label | escape }}
        {%- else -%}
          {{ value.label | escape }}
        {%- endif -%}
        {%- render 'icon' with icon: 'close-small' -%}
      </a>
    {%- endfor -%}

    {%- if filter.type == 'price_range' -%}
      {%- if filter.min_value.value != null or filter.max_value.value != null -%}
        <a
          href="{{ filter.url_to_remove }}"
          class="active-filters__active-filter fs-body-75 no-transition"
          data-remove-range
        >
          {%- if filter.min_value.value -%}
            {{ filter.min_value.value | money }}
          {%- else -%}
            {{ 0 | money }}
          {%- endif -%}
          &nbsp;â€“&nbsp;
          {%- if filter.max_value.value -%}
            {{ filter.max_value.value | money }}
          {%- else -%}
            {{ filter.range_max | money }}
          {%- endif -%}
          {%- render 'icon' with icon: 'close-small' -%}
        </a>
      {%- endif -%}
    {%- endif -%}
  {%- endfor -%}

  <a
    href="{{ results_url }}"
    class="active-filters__active-filter active-filters__clear no-transition btn btn--text-link fs-body-75"
    data-clear-all-filters
  >
    <span>{{ 'filters.clear_filters' | t }}</span>
  </a>
</div>

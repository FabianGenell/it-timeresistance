{% doc %}
  Renders a responsive image with lazy loading and performance optimizations

  @param {object} image - The image object to render
  @param {string} sizes - The sizes attribute for responsive images
  @param {boolean} [prioritize_loading] - If true, loads image with high priority
  @param {number} [fallback_width] - Width for browsers that don't support srcset (default: 320)
  @param {string} [tag_name] - HTML tag to render ('img', 'picture', 'source') (default: 'img')
  @param {string} [media] - Media query for source elements
  @param {string} [aspect_ratio] - Force aspect ratio ('portrait', 'landscape', 'square', 'natural')
  @param {string} [fallback_alt] - Alt text fallback if image has no alt
  @param {boolean} [no_crop] - If true, don't crop image server-side
  @param {string} [src_set_type] - Optimize srcset for context ('grid', 'full-width', 'thumbnail')
  @param {string} [load_type] - Control loading timing ('dom', 'load', 'manual')
  @param {string} [class_name] - Additional CSS classes for the image

  @example Basic usage
  {% render 'responsive-image', image: product.featured_image, sizes: '50vw' %}

  @example With performance optimization
  {% render 'responsive-image', 
    image: media, 
    sizes: '90vw',
    load_type: 'load',
    prioritize_loading: true
  %}
{% enddoc %}

{%- liquid
  if tag_name == blank
    assign tag_name = "img"
  endif

  if fallback_width == blank
    assign fallback_width = 320
  endif

  if lazy or load_type
    assign src_attr = "data-src"
    assign src_set_attr = "data-srcset"
  else
    assign src_attr = "src"
    assign src_set_attr = "srcset"
  endif

  case src_set_type
    when "grid"
      # Assumption: even with a 2-per row grid on large screen, grid item will not be more than 700px @2x wide
      assign src_set_widths_raw = "150,200,240,280,300,360,400,450,500,550,600,650,700,750,800,850,900,950,1000,1100,1200,1300,1400"
    when "full-width"
      # Assumption: even smallest phone will be  350px @ 2x = 700 at least
      assign src_set_widths_raw = "700,750,800,850,900,950,1000,1100,1200,1300,1400,1500,1600,1800,2000,2200,2400,2600,2800,3000,3500,4000,4500,5000,5500,6000"
    when "thumbnail"
      # Assumption: even desktop thumbnails shouldn't be more 300px @2x wide = 600 max
      assign src_set_widths_raw = "150,200,240,280,300,360,400,450,500,550,600"
    else
    assign src_set_widths_raw = "100,150,200,240,280,300,360,400,450,500,550,600,650,700,750,800,850,900,950,1000,1100,1200,1300,1400,1500,1600,1800,2000,2200,2400,2600,2800,3000,3500,4000,4500,5000,5500,6000"
  endcase

  assign src_set_widths = src_set_widths_raw | split: ','
  assign src_set_string = ""
-%}

{%- liquid
  if object_fit != "contain" and aspect_ratio != blank and aspect_ratio != 'natural'
    case aspect_ratio
      when "portrait"
        assign crop_height_ratio = 1.5
      when "landscape"
        assign crop_height_ratio = 0.666666
      when "square"
        assign crop_height_ratio = 1
      when "portrait_alt"
        assign crop_height_ratio = 1.25
      when "landscape_alt"
        assign crop_height_ratio = 0.8
      when "landscape_wide_alt"
        assign crop_height_ratio = 0.5625
    endcase
  endif

  assign image_crop = "center"
  if focal_alignment != blank and focal_alignment != "center"
    assign image_crop = focal_alignment
  endif
-%}

{%- for width_string in src_set_widths -%}
  {%- assign width = width_string | plus: 0 -%}

  {% if image.width < width %}
    {% break %}
  {% endif %}

  {%- if crop_height_ratio and focal_point != "image_presentation" -%}
    {%- assign crop_height = width | times : crop_height_ratio -%}
    {%- if image.height < crop_height -%}
      {% break %}
    {%- endif -%}
  {%- endif -%}

  {%- capture src_set_string -%}
    {%- if src_set_string.size > 0 -%}{{ src_set_string }},{{ ' ' }}{%- endif -%}
    {%- if crop_height_ratio and focal_point != "image_presentation" and no_crop != true -%}
      {{ image | image_url: width: width, height: crop_height, crop: image_crop }} {{width}}w
    {%- else -%}
      {{ image | image_url: width: width }} {{width}}w
    {%- endif -%}
  {%- endcapture -%}
{%- endfor -%}

{% capture alt %}{% if image.alt.size > 0 %}{{ image.alt }}{% else %}{{ fallback_alt }}{% endif %}{% endcapture %}

<{{ tag_name }}
  alt="{{ alt | escape }}"{{ ' ' }}
  class="image__img{%- if class_name %} {{ class_name }}{%- endif -%}"{{ ' ' }}
  {% if prioritize_loading %}fetchpriority="high"{% else %}loading="lazy"{{ ' ' }}{% endif %}
  width="{{ image.width }}"{{ ' ' }}
  height="{{ image.height }}"{{ ' ' }}
  {% unless tag_name == "source" %}{{ src_attr }}="{{ image | image_url: width: fallback_width }}"{{ ' ' }}{% endunless %}
  {% if media %}media="{{ media }}"{{ ' ' }}{% endif %}
  {{ src_set_attr }}="{{ src_set_string }}"{{ ' ' }}
  sizes="{{ sizes }}"
  {%- if load_type -%}data-load-{{ load_type }}{{ ' ' }}{%- endif -%}
  onload="javascript: this.closest('.image').classList.add('loaded')"
/>
class u{constructor(){this.favorites=this.fetchFavorites(),this.displayCountEls=document.querySelectorAll("[data-js-favorites-count]"),this.updateDisplayCount(),console.debug("Favorites",this.favorites)}fetchFavorites(){const t=localStorage.getItem("favorites");let e=[];if(t)try{const s=JSON.parse(t);Array.isArray(s)&&(e=s)}catch(s){console.error("Error parsing favorites from localStorage",s)}return e}removeFavorite(t){this.favorites=this.favorites.filter(e=>e.handle!==t.handle),console.debug("Favorites after removal",this.favorites),this.updateLocalStorage(this.favorites),this.updateDisplayCount()}addFavorite(t){this.favorites.push(t),console.debug("Favorites after addition",this.favorites),this.updateLocalStorage(this.favorites),this.updateDisplayCount()}updateDisplayCount(){this.displayCountEls.forEach(t=>{t.textContent=this.favorites.length,this.favorites.length===0?t.classList.add("opacity-0"):t.classList.remove("opacity-0")})}updateLocalStorage(t){localStorage.setItem("favorites",JSON.stringify(t))}}const o=new u;class f extends HTMLElement{constructor(){super(),this.productGrid=this.querySelector("[data-product-grid]"),this.spinner=this.querySelector("[data-spinner]"),this.emptyStateEl=this.querySelector("[data-empty-state]"),o.favorites.length>0?this.fetchProducts():(this.emptyStateEl.classList.remove("hidden"),this.spinner.classList.add("hidden"))}async fetchProductHTML(t){let e=`/products/${t.handle}?view=card`;t.variantId&&(e+=`&variant=${t.variantId}`);const s=await fetch(e).then(h=>h.text());return new DOMParser().parseFromString(s,"text/html").querySelector(".product-item")}batchArray(t,e){const s=[];for(let r=0;r<t.length;r+=e)s.push(t.slice(r,r+e));return s}async fetchProducts(){const t=this.batchArray(o.favorites,4);await Promise.all(t.map(async e=>{const s=await Promise.all(e.map(async r=>this.fetchProductHTML(r)));return s.forEach(r=>{try{return this.productGrid.appendChild(r)}catch{}}),s})),this.spinner.classList.add("hidden")}}customElements.define("favorite-products",f);class v extends HTMLElement{constructor(){super(),this.productHandle=this.dataset.productHandle,this.variantId=this.dataset.variantId,this.favoriteItem={handle:this.productHandle},this.variantId&&(this.favoriteItem.variantId=this.variantId),this.addEventListener("click",this.handleClick.bind(this)),this.updateState()}get isFavorite(){return o.favorites.some(t=>t.handle===this.productHandle)}handleClick(){this.isFavorite?this.removeFavorite():this.addFavorite(),this.updateState()}removeFavorite(){o.removeFavorite(this.favoriteItem)}addFavorite(){o.addFavorite(this.favoriteItem)}updateState(){this.isFavorite?this.setAttribute("added",""):this.removeAttribute("added")}}customElements.define("add-favorite",v);function d(a){setTimeout(()=>{requestAnimationFrame(a)},0)}function i(a){const t=e=>{e.dataset.src&&!e.src&&(e.src=e.dataset.src),e.dataset.srcset&&!e.srcset&&(e.srcset=e.dataset.srcset)};a.parentNode.tagName==="PICTURE"?Array.from(a.parentNode.children).forEach(e=>{t(e)}):t(a)}function n(a){return a.forEach(t=>i(t))}function c(){if(!("loading"in HTMLImageElement.prototype)&&"IntersectionObserver"in window){console.log("intersection observer");const a=new IntersectionObserver((t,e)=>{t.forEach(s=>{if(s.isIntersecting){const r=s.target;i(r),e.unobserve(r)}})},{rootMargin:"0px 0px 500px 0px"});document.querySelectorAll('[loading="lazy"]').forEach(t=>{a.observe(t)})}else{const a=[],t=[];document.querySelectorAll('[loading="lazy"], [data-src]').forEach(e=>{if(e.hasAttribute("data-load-dom"))a.push(e);else if(e.hasAttribute("data-load-load"))t.push(e);else{if(e.hasAttribute("data-load-manual"))return;i(e)}}),p(a),m(t)}}function p(a){console.debug("loadImagesOnDOMLoaded",a);const t=()=>d(()=>n(a));if(document.readyState!="loading")return t();document.addEventListener("DOMContentLoaded",t)}function m(a){console.debug("loadImagesOnLoaded",a);const t=()=>d(()=>n(a));if(document.readyState=="complete")return t();window.addEventListener("load",t)}d(c);document.addEventListener("DOMContentLoaded",c);window.theme={};console.log("main.bundle.js loaded");document.dispatchEvent(new CustomEvent("theme:loaded"));
//# sourceMappingURL=main.bundle.js.map

class u{constructor(){this.favorites=this.fetchFavorites(),this.displayCountEls=document.querySelectorAll("[data-js-favorites-count]"),this.updateDisplayCount(),console.debug("Favorites",this.favorites)}fetchFavorites(){const e=localStorage.getItem("favorites");let t=[];if(e)try{const n=JSON.parse(e);Array.isArray(n)&&(t=n)}catch(n){console.error("Error parsing favorites from localStorage",n)}return t}removeFavorite(e){this.favorites=this.favorites.filter(t=>t.handle!==e.handle),console.debug("Favorites after removal",this.favorites),this.updateLocalStorage(this.favorites),this.updateDisplayCount()}addFavorite(e){this.favorites.push(e),console.debug("Favorites after addition",this.favorites),this.updateLocalStorage(this.favorites),this.updateDisplayCount()}updateDisplayCount(){this.displayCountEls.forEach(e=>{e.textContent=this.favorites.length,this.favorites.length===0?e.classList.add("opacity-0"):e.classList.remove("opacity-0")})}updateLocalStorage(e){localStorage.setItem("favorites",JSON.stringify(e))}}const a=new u;class f extends HTMLElement{constructor(){super(),this.productGrid=this.querySelector("[data-product-grid]"),this.spinner=this.querySelector("[data-spinner]"),this.emptyStateEl=this.querySelector("[data-empty-state]"),a.favorites.length>0?this.fetchProducts():(this.emptyStateEl.classList.remove("hidden"),this.spinner.classList.add("hidden"))}async fetchProductHTML(e){let t=`/products/${e.handle}?view=card`;e.variantId&&(t+=`&variant=${e.variantId}`);const n=await fetch(t).then(h=>h.text());return new DOMParser().parseFromString(n,"text/html").querySelector(".product-item")}batchArray(e,t){const n=[];for(let o=0;o<e.length;o+=t)n.push(e.slice(o,o+t));return n}async fetchProducts(){const e=this.batchArray(a.favorites,4);await Promise.all(e.map(async t=>{const n=await Promise.all(t.map(async o=>this.fetchProductHTML(o)));return n.forEach(o=>{try{return this.productGrid.appendChild(o)}catch{}}),n})),this.spinner.classList.add("hidden")}}customElements.define("favorite-products",f);class m extends HTMLElement{constructor(){super(),this.productHandle=this.dataset.productHandle,this.variantId=this.dataset.variantId,this.favoriteItem={handle:this.productHandle},this.variantId&&(this.favoriteItem.variantId=this.variantId),this.addEventListener("click",this.handleClick.bind(this)),this.updateState()}get isFavorite(){return a.favorites.some(e=>JSON.stringify(e)===JSON.stringify(this.favoriteItem))}handleClick(){this.isFavorite?this.removeFavorite():this.addFavorite(),this.updateState()}removeFavorite(){a.removeFavorite(this.favoriteItem)}addFavorite(){a.addFavorite(this.favoriteItem)}updateState(){this.isFavorite?this.setAttribute("added",""):this.removeAttribute("added")}}customElements.define("add-favorite",m);class v extends HTMLElement{constructor(){super(),console.debug("ReloadOnEvent constructor"),this.event=this.getAttribute("data-event"),this.section=this.closest(".shopify-section"),this.sectionId=this.section.id,this.shopifySectionId=this.sectionId.replace("shopify-section-",""),this.container=this.section.querySelector("[data-section-type]"),this.sectionType=this.container.getAttribute("data-section-type"),this.init()}init(){this.url=new URL(window.location.href),this.url.searchParams.set("sections",this.shopifySectionId),console.debug("ReloadOnEvent init, adding event listener for",this.event),document.addEventListener(this.event,this.handleChange.bind(this))}handleChange(e){console.debug("ReloadOnEvent handleChange, reloading - event.detail:",e.detail),e.detail.variant&&this.url.searchParams.set("variant",e.detail.variant.id),this.reload()}async reload(){await this.setNewHTML(),window.Shopify.theme.sections.unload(this.container);const e=this.querySelector(`[data-section-type="${this.sectionType}"]`);if(!e){console.error(`ReloadOnEvent reload: Failed to find the new container element with type [${this.sectionType}] after updating innerHTML.`);return}this.container=e,window.Shopify.theme.sections.load(this.sectionType,this.container),this.dispatchEvent(new CustomEvent("reload-on-event:loaded",{bubbles:!0,detail:{sectionId:this.sectionId,shopifySectionId:this.shopifySectionId}}))}async setNewHTML(){try{const e=await this.fetchSectionHTML();if(!e){console.error("ReloadOnEvent setNewHTML: Fetched HTML is empty or null for section",this.shopifySectionId);return}const o=new DOMParser().parseFromString(e,"text/html").getElementById(this.sectionId);if(o){const i=this.findSelfInHTML(o);i?this.innerHTML=i.innerHTML:console.warn('ReloadOnEvent setNewHTML: Could not find "self" (<reload-on-event>) element within the fetched section HTML using findSelfInHTML.')}else console.warn("ReloadOnEvent setNewHTML: Could not find the parent Shopify section element in the fetched HTML. Section ID:",this.sectionId)}catch(e){console.error("ReloadOnEvent setNewHTML: Error fetching or parsing HTML:",e)}}async fetchSectionHTML(){console.debug("ReloadOnEvent fetchSectionHTML, url",this.url);const e=await fetch(this.url).then(t=>t.json());return console.debug("ReloadOnEvent fetchSectionHTML, sectionJSON",e),e[this.shopifySectionId]}findSelfInHTML(e){const t=[];let n=this;for(;n;){let o=n.tagName.toLowerCase();if(n.parentElement){const i=Array.from(n.parentElement.children).indexOf(n)+1;i>1&&(o+=`:nth-child(${i})`)}if(t.unshift(o),n=n.parentElement,n&&n.id===this.sectionId)break}return e.querySelector(t.join(" > "))}}customElements.define("reload-on-event",v);class p extends HTMLElement{constructor(){super(),this.select=this.querySelector("#marketSelector")}connectedCallback(){this.select&&this.setupEventListeners()}setupEventListeners(){this.select.addEventListener("change",e=>this.handleMarketChange(e))}handleMarketChange(e){const n=e.target.selectedOptions[0].dataset.url;n&&(window.location.href=n)}}customElements.define("currency-selector",p);function r(s){setTimeout(()=>{requestAnimationFrame(s)},0)}function d(s){const e=t=>{t.dataset.src&&!t.src&&(t.src=t.dataset.src),t.dataset.srcset&&!t.srcset&&(t.srcset=t.dataset.srcset)};s.parentNode.tagName==="PICTURE"?Array.from(s.parentNode.children).forEach(t=>{e(t)}):e(s)}function l(s){return s.forEach(e=>d(e))}function c(){if(!("loading"in HTMLImageElement.prototype)&&"IntersectionObserver"in window){console.log("intersection observer");const s=new IntersectionObserver((e,t)=>{e.forEach(n=>{if(n.isIntersecting){const o=n.target;d(o),t.unobserve(o)}})},{rootMargin:"0px 0px 500px 0px"});document.querySelectorAll('[loading="lazy"]').forEach(e=>{s.observe(e)})}else{const s=[],e=[];document.querySelectorAll('[loading="lazy"], [data-src]').forEach(t=>{if(t.hasAttribute("data-load-dom"))s.push(t);else if(t.hasAttribute("data-load-load"))e.push(t);else{if(t.hasAttribute("data-load-manual"))return;d(t)}}),y(s),g(e)}}function y(s){console.debug("loadImagesOnDOMLoaded",s);const e=()=>r(()=>l(s));if(document.readyState!="loading")return e();document.addEventListener("DOMContentLoaded",e)}function g(s){console.debug("loadImagesOnLoaded",s);const e=()=>r(()=>l(s));if(document.readyState=="complete")return e();window.addEventListener("load",e)}r(c);document.addEventListener("DOMContentLoaded",c);document.addEventListener("shopify:section:load",()=>r(c));document.addEventListener("DOMContentLoaded",()=>{document.addEventListener("click",s=>{const e=s.target.tagName==="A"?s.target:s.target.closest("a");e&&e.tagName==="A"&&window.location.hostname!==new URL(e.href).hostname&&(e.target="_blank")}),document.addEventListener("click",s=>{s.target.tagName==="A"&&window.location.hostname===new URL(s.target.href).hostname&&s.target.href.includes("#")&&(document.getElementsByTagName("html")[0].style.scrollBehavior="smooth",setTimeout(()=>{document.getElementsByTagName("html")[0].style.scrollBehavior=""},1e3))})});window.theme=window.theme||{};console.log("main.bundle.js loaded");document.dispatchEvent(new CustomEvent("theme:loaded"));
//# sourceMappingURL=main.bundle.js.map
